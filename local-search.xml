<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue和django的一些配置</title>
    <link href="/2025/04/02/vue%E5%92%8Cdjango%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/04/02/vue%E5%92%8Cdjango%E7%9A%84%E4%B8%80%E4%BA%9B%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>vue 和 django 的一些配置</p><span id="more"></span><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="Django-安装"><a href="#Django-安装" class="headerlink" title="Django 安装"></a>Django 安装</h2><p>python 3.11 之后需要使用虚拟环境安装，否则就会报错。具体的做法是这样的</p><p>首先使用这个命令创建一个 python 虚拟环境 <code>venv</code>是虚拟环境名字 后面的是路径可以自己找一个目录放进去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python -m venv /path/to/new/virtual/environment<br></code></pre></td></tr></table></figure><p>接着进去这个刚刚创建好的目录去 source 它<br>比如我的电脑目前的虚拟环境地址在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">~/.venv/<br></code></pre></td></tr></table></figure><p>执行这个命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">source ~/.venv/bin/activate<br></code></pre></td></tr></table></figure><p>这样这个终端的环境就变成虚拟环境 python 了</p><p>如果不使用虚拟环境 pip 安装<code>Django</code>会直接报错，其他的一些包也是同理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install django<br></code></pre></td></tr></table></figure><p>运行服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python manager.py runserver<br></code></pre></td></tr></table></figure><h2 id="Django-连接-MySQL"><a href="#Django-连接-MySQL" class="headerlink" title="Django 连接 MySQL"></a>Django 连接 MySQL</h2><p>MySQL 数据库可以使用命令行直接安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install mysql-server<br></code></pre></td></tr></table></figure><p>Django 与 mysql 通讯需要使用 pymysql 这个库（比较老了），新的库配置环境有些问题所以比较推荐使用这个</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pip install pymysql<br></code></pre></td></tr></table></figure><p>下载好模块后需要在项目的<code>__init__.py</code>中配置。注意是项目的<code>__init__</code>不是 app 下的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br>pymysql.install_as_MySQLdb()<br></code></pre></td></tr></table></figure><p>接着修改 settings.py 中的 DATABASES 条目</p><p>这是 Django 默认的 使用自带的 sqlite3 数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.sqlite3&#x27;</span>,<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: BASE_DIR / <span class="hljs-string">&#x27;db.sqlite3&#x27;</span>,<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>我们修改一下，以使用 MySQL</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.mysql&#x27;</span>,<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,<br>        <span class="hljs-string">&#x27;USER&#x27;</span>:<span class="hljs-string">&#x27;root&#x27;</span>,<br>        <span class="hljs-string">&#x27;PASSWORD&#x27;</span>:<span class="hljs-string">&#x27;123456&#x27;</span>,<br>        <span class="hljs-string">&#x27;HOST&#x27;</span>:<span class="hljs-string">&#x27;localhost&#x27;</span>,<br>        <span class="hljs-string">&#x27;PORT&#x27;</span>:<span class="hljs-string">&#x27;3306&#x27;</span>,<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="服务器-MySQL-连接-navicat"><a href="#服务器-MySQL-连接-navicat" class="headerlink" title="服务器 MySQL 连接 navicat"></a>服务器 MySQL 连接 navicat</h3><p>首先登录数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql -uroot -p    ## 以root登录数据库<br></code></pre></td></tr></table></figure><p>查看一下当前端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">use mysql;    ## 选择mysql数据库<br>select user,host from user;    ## 查看用户访问端口<br></code></pre></td></tr></table></figure><p><strong>说明</strong>：root 用户默认的是 localhost，说明只允许从本地登录 mysql 服务。而我们要从远程以 root 用户连接数据库，就必须修改 host 的值，改为**’%’**：允许任何 ip 访问。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">update user set host = &#x27;%&#x27; where user = &#x27;root&#x27;;<br></code></pre></td></tr></table></figure><p>再次查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">mysql&gt; </span><span class="language-bash"><span class="hljs-keyword">select</span> user,host from user;    <span class="hljs-comment">## 查看用户访问端口</span></span><br>+------------------+-----------+<br>| user             | host      |<br>+------------------+-----------+<br>| root             | %         |<br>| debian-sys-maint | localhost |<br>| mysql.infoschema | localhost |<br>| mysql.session    | localhost |<br>| mysql.sys        | localhost |<br>+------------------+-----------+<br>5 rows in set (0.00 sec)<br><br></code></pre></td></tr></table></figure><p>这样就表示允许任何 ip 访问了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">FLUSH PRIVILEGES;    ## 刷新服务配置项<br></code></pre></td></tr></table></figure><p>刷新一下</p><p>接着设置一个远程用户的登录密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root_pwd&#x27;; ## 授权root远程登录 后面的root_pwd代表登录密码<br></code></pre></td></tr></table></figure><p>这里的 root_pwd 是自己填的 我写的是 123456</p><h2 id="Django-与-Vue-的通讯"><a href="#Django-与-Vue-的通讯" class="headerlink" title="Django 与 Vue 的通讯"></a>Django 与 Vue 的通讯</h2><h3 id="配置-cnpm"><a href="#配置-cnpm" class="headerlink" title="配置 cnpm"></a>配置 cnpm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><p>以后安装 npm 的包都可以使用去安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cnpm install [name]<br></code></pre></td></tr></table></figure><p>使用 vite 创建项目也会有这个问题可以考虑下面的命令进行换源</p><p>查看 npm 的镜像地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config get registry<br></code></pre></td></tr></table></figure><p>使用 taobao 镜像地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h1 id="项目运行"><a href="#项目运行" class="headerlink" title="项目运行"></a>项目运行</h1><h2 id="Django-篇"><a href="#Django-篇" class="headerlink" title="Django 篇"></a>Django 篇</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">django-admin startproject xxxx<br></code></pre></td></tr></table></figure><h3 id="创建-APP"><a href="#创建-APP" class="headerlink" title="创建 APP"></a>创建 APP</h3><p>进入项目后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python manage.py startapp xxxx<br></code></pre></td></tr></table></figure><h3 id="项目目录"><a href="#项目目录" class="headerlink" title="项目目录"></a>项目目录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">├── app01<br>│   ├── admin.py                          [不动]自带的默认的后台管理功能<br>│   ├── apps.py                           [不动]app启动类<br>│   ├── __init__.py<br>│   ├── migrations                        [不动]数据库变更记录<br>│   │   └── __init__.py<br>│   ├── models.py                         [重要]对数据库进行操作<br>│   ├── tests.py<br>│   └── views.py                          [重要,经常修改]函数<br>├── manage.py<br>└── mysite<br>    ├── asgi.py<br>    ├── __init__.py<br>    ├── __pycache__<br>    │   ├── __init__.cpython-38.pyc<br>    │   └── settings.cpython-38.pyc<br>    ├── settings.py<br>    ├── urls.py                           [URL-&gt;函数]<br>    └── wsgi.py<br></code></pre></td></tr></table></figure><h3 id="APP-注册"><a href="#APP-注册" class="headerlink" title="APP 注册"></a>APP 注册</h3><p>创建好的 APP 不能直接使用需要注册后才可以，小型项目的话一般只需要一个 APP 就可以了。注册需要在项目名的<code>seetings.py</code>中注册</p><p>在这个<code>mysite</code>的项目中就是<code>mysite.settings.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">INSTALLED_APPS = [<br>    <span class="hljs-string">&#x27;django.contrib.admin&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.contenttypes&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.staticfiles&#x27;</span>,<br>    <span class="hljs-string">&#x27;app01.apps.App01Config&#x27;</span>, <span class="hljs-comment">#这里也可以直接简写为app01</span><br>]<br></code></pre></td></tr></table></figure><h3 id="编写-URL-和视图函数的对应关系"><a href="#编写-URL-和视图函数的对应关系" class="headerlink" title="编写 URL 和视图函数的对应关系"></a>编写 URL 和视图函数的对应关系</h3><p>在 urls.py 中编写 路径是<code>mysite.urls.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><br><br><span class="hljs-keyword">from</span> app01 <span class="hljs-keyword">import</span> views<br>urlpatterns = [<br>    <span class="hljs-comment"># path(&#x27;admin/&#x27;, admin.site.urls),</span><br><br>    path(<span class="hljs-string">&#x27;index/&#x27;</span>,views.index)<br><br>]<br></code></pre></td></tr></table></figure><p>下面即是 app01.views.py 的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render,HttpResponse<br><br><span class="hljs-comment"># Create your views here.</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>): <span class="hljs-comment">#默认有一个参数 request</span><br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;Hello&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="模板路径问题"><a href="#模板路径问题" class="headerlink" title="模板路径问题"></a>模板路径问题</h3><p>下面是使用 <code>django-admin</code> start project 创建的项目可以看到 DIRS 里面是空的，如果我们有一个 template 这里是放在 APP01 的文件夹里面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>├── app01<br>│   ├── admin.py<br>│   ├── apps.py<br>│   ├── __init__.py<br>│   ├── migrations<br>│   │   ├── __init__.py<br>│   │   └── __pycache__<br>│   │       └── __init__.cpython-38.pyc<br>│   ├── models.py<br>│   ├── __pycache__<br>│   │   ├── admin.cpython-38.pyc<br>│   │   ├── apps.cpython-38.pyc<br>│   │   ├── __init__.cpython-38.pyc<br>│   │   ├── models.cpython-38.pyc<br>│   │   └── views.cpython-38.pyc<br>│   ├── templates<br>│   │   └── user_list.html<br>│   ├── tests.py<br>│   └── views.py<br>├── db.sqlite3<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">TEMPLATES = [<br>    &#123;<br>        <span class="hljs-string">&#x27;BACKEND&#x27;</span>: <span class="hljs-string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,<br>        <span class="hljs-string">&#x27;DIRS&#x27;</span>: [],<br>        <span class="hljs-string">&#x27;APP_DIRS&#x27;</span>: <span class="hljs-literal">True</span>,<br>        <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;<br>            <span class="hljs-string">&#x27;context_processors&#x27;</span>: [<br>                <span class="hljs-string">&#x27;django.template.context_processors.debug&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.template.context_processors.request&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,<br>            ],<br>        &#125;,<br>    &#125;,<br>]<br><br></code></pre></td></tr></table></figure><p>Django 会根据注册的 APP 顺序依次查找 template 文件夹</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>INSTALLED_APPS = [<br>    <span class="hljs-string">&#x27;django.contrib.admin&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.contenttypes&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.staticfiles&#x27;</span>,<br>    <span class="hljs-string">&#x27;app01.apps.App01Config&#x27;</span>,<br>]<br></code></pre></td></tr></table></figure><p>但是如果使用 pycharm 就会在 TEMPLATES 这里面加上一句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&#x27;DIRS&#x27;</span>: [], <span class="hljs-comment"># 命令行创建 建议使用这种 这样每个模板都被APP归类</span><br><span class="hljs-string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR,<span class="hljs-string">&#x27;templates&#x27;</span>)], <span class="hljs-comment"># 使用pycharm会变成这样</span><br></code></pre></td></tr></table></figure><p>pycharm 这样的结果就是 django 会优先在项目根目录去寻找 template</p><h3 id="静态文件-css-js-图片-的引入"><a href="#静态文件-css-js-图片-的引入" class="headerlink" title="静态文件(css,js,图片)的引入"></a>静态文件(css,js,图片)的引入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是用户列表<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;img/ming_ri_xiang.png&#x27; %&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="Django-模板语法"><a href="#Django-模板语法" class="headerlink" title="Django 模板语法"></a>Django 模板语法</h3><p>响应式的那种，就是在 HTML 中留一些位置，之后用数据对这些位置进行处理</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>标题<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;&#123;% static &#x27;plugins/bootstrap/css/bootstrap.css&#x27;%&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>这是用户列表<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-comment">&lt;!-- &lt;img src=&quot;&#123;% static &#x27;img/ming_ri_xiang.png&#x27; %&#125;&quot;&gt; --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn btn-primary&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;新建&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123; n1 &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123;n2.0&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>&#123;&#123;n2.1&#125;&#125;&#123;&#123;n2.2&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>&#123;% for item in n2 %&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>&#123;% endfor %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">hr</span> /&gt;</span><br>&#123;&#123;n3.salary&#125;&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>&#123;% for item in n3.keys %&#125;<br><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>&#123;% endfor %&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>后台 views</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render,HttpResponse<br><br><span class="hljs-comment"># Create your views here.</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">index</span>(<span class="hljs-params">request</span>): <span class="hljs-comment">#默认有一个参数 request</span><br>    name = <span class="hljs-string">&quot;长门有希大萌神&quot;</span> <span class="hljs-comment">#这里可以通过python从数据库里面读数据</span><br>    roles = [<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>]<br>    user_info = &#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;qw&quot;</span>,<span class="hljs-string">&quot;salary&quot;</span>:<span class="hljs-number">10000</span>,<span class="hljs-string">&quot;role&quot;</span>:<span class="hljs-string">&quot;CTO&quot;</span>&#125;<br>    <span class="hljs-keyword">return</span> render(request,<span class="hljs-string">&quot;index.html&quot;</span>,&#123;<span class="hljs-string">&quot;n1&quot;</span>:name,<span class="hljs-string">&quot;n2&quot;</span>:roles,<span class="hljs-string">&quot;n3&quot;</span>:user_info&#125;)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">user_list</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">return</span> render(request,<span class="hljs-string">&quot;user_list.html&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">user_add</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">return</span> HttpResponse(<span class="hljs-string">&quot;添加用户&quot;</span>)<br></code></pre></td></tr></table></figure><h3 id="请求和响应"><a href="#请求和响应" class="headerlink" title="请求和响应"></a>请求和响应</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">something</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-comment">#请求的三种方式</span><br>    <span class="hljs-built_in">print</span>(request.method) <span class="hljs-comment">#获得请求方式</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;URL=&gt; &quot;</span>,request.GET) <span class="hljs-comment">#在URL上传值</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;POST=&gt; &quot;</span>,request.POST)<span class="hljs-comment">#在请求体中返回数据</span><br><br>    <span class="hljs-comment">#响应</span><br>    <span class="hljs-comment"># return HttpResponse(&quot;添加用户&quot;)</span><br>    <span class="hljs-comment"># return render(request,&quot;user_list.html&quot;)</span><br><br>    <span class="hljs-keyword">return</span> redirect(<span class="hljs-string">&quot;https://www.baidu.com&quot;</span>) <span class="hljs-comment"># 让浏览器重定向到其他页面</span><br></code></pre></td></tr></table></figure><h3 id="Django-与数据库交互"><a href="#Django-与数据库交互" class="headerlink" title="Django 与数据库交互"></a>Django 与数据库交互</h3><p>连接好数据库后，打开 app01 下的 models.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">UserInfo</span>(models.Model):<br>    user = models.CharField(max_length=<span class="hljs-number">32</span>)<br>    pwd = models.CharField(max_length=<span class="hljs-number">32</span>)<br></code></pre></td></tr></table></figure><p>这样就会在我们的数据库中创建一个名为 UserInfo 的表，且有两个字段 user 和 pwd，当然这个时候只是设计好，下面几个命令执行完后才会真正开始创建</p><p>运行下面这个命令来创建数据库表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python manage.py makemigrations<br></code></pre></td></tr></table></figure><p>再输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python manage.py migrate<br></code></pre></td></tr></table></figure><h1 id="前后端交互"><a href="#前后端交互" class="headerlink" title="前后端交互"></a>前后端交互</h1><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><h3 id="Django-setting-文件配置"><a href="#Django-setting-文件配置" class="headerlink" title="Django setting 文件配置"></a>Django setting 文件配置</h3><p>django 想要与 Vue 进行交互需要 RestFramework，还有 cors-headers 这两个插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install djangorestframework<br>pip install django-cors-headers<br></code></pre></td></tr></table></figure><p>安装在 django 的根目录下的 setting 文件中进行 app 注册</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">INSTALLED_APPS = [<br>    <span class="hljs-string">&#x27;django.contrib.admin&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.contenttypes&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.staticfiles&#x27;</span>,<br>    <span class="hljs-string">&#x27;rest_framework&#x27;</span>,<br>    <span class="hljs-string">&#x27;corsheaders&#x27;</span>,<br>    <span class="hljs-string">&#x27;lyb&#x27;</span>,<br>]<br></code></pre></td></tr></table></figure><p>因为前端与后端进行交互设计一个跨域保护的问题，后端使用 django-cors-headers 插件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">MIDDLEWARE = [<br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>, <span class="hljs-comment"># 注意顺序</span><br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>]<br></code></pre></td></tr></table></figure><p>接着继续编辑 setting 文件，增加这两个配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">ROOT_URLCONF = <span class="hljs-string">&#x27;backends.urls&#x27;</span> <span class="hljs-comment"># 后端项目的总路由路径</span><br>CORS_ORIGIN_ALLOW_ALL = <span class="hljs-literal">True</span> <span class="hljs-comment">#这是允许所有的跨域请求</span><br></code></pre></td></tr></table></figure><p>至此后端的 setting 文件配置完成</p><p>总配置文件如下 backends.settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Django settings for backends project.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Generated by &#x27;django-admin startproject&#x27; using Django 5.0.1.</span><br><span class="hljs-string"></span><br><span class="hljs-string">For more information on this file, see</span><br><span class="hljs-string">https://docs.djangoproject.com/en/5.0/topics/settings/</span><br><span class="hljs-string"></span><br><span class="hljs-string">For the full list of settings and their values, see</span><br><span class="hljs-string">https://docs.djangoproject.com/en/5.0/ref/settings/</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br><br><span class="hljs-comment"># Build paths inside the project like this: BASE_DIR / &#x27;subdir&#x27;.</span><br>BASE_DIR = Path(__file__).resolve().parent.parent<br><br><br><span class="hljs-comment"># Quick-start development settings - unsuitable for production</span><br><span class="hljs-comment"># See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/</span><br><br><span class="hljs-comment"># SECURITY WARNING: keep the secret key used in production secret!</span><br>SECRET_KEY = <span class="hljs-string">&#x27;django-insecure-#fz@#++_qt+!=&amp;)tt2&amp;%uui8d)pmh=ko0v18midrnv8vfud@^*&#x27;</span><br><br><span class="hljs-comment"># SECURITY WARNING: don&#x27;t run with debug turned on in production!</span><br>DEBUG = <span class="hljs-literal">True</span><br><br>ALLOWED_HOSTS = []<br><br><br><span class="hljs-comment"># Application definition</span><br><br>INSTALLED_APPS = [<br>    <span class="hljs-string">&#x27;django.contrib.admin&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.contenttypes&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.staticfiles&#x27;</span>,<br>    <span class="hljs-string">&#x27;rest_framework&#x27;</span>,<br>    <span class="hljs-string">&#x27;corsheaders&#x27;</span>,<br>    <span class="hljs-string">&#x27;lyb&#x27;</span>,<br>]<br><br>MIDDLEWARE = [<br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>]<br><br>ROOT_URLCONF = <span class="hljs-string">&#x27;backends.urls&#x27;</span><br>CORS_ORIGIN_ALLOW_ALL = <span class="hljs-literal">True</span><br>TEMPLATES = [<br>    &#123;<br>        <span class="hljs-string">&#x27;BACKEND&#x27;</span>: <span class="hljs-string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,<br>        <span class="hljs-string">&#x27;DIRS&#x27;</span>: [],<br>        <span class="hljs-string">&#x27;APP_DIRS&#x27;</span>: <span class="hljs-literal">True</span>,<br>        <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;<br>            <span class="hljs-string">&#x27;context_processors&#x27;</span>: [<br>                <span class="hljs-string">&#x27;django.template.context_processors.debug&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.template.context_processors.request&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,<br>            ],<br>        &#125;,<br>    &#125;,<br>]<br><br>WSGI_APPLICATION = <span class="hljs-string">&#x27;backends.wsgi.application&#x27;</span><br><br><br><span class="hljs-comment"># Database</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/5.0/ref/settings/#databases</span><br><br>DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.sqlite3&#x27;</span>,<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: BASE_DIR / <span class="hljs-string">&#x27;db.sqlite3&#x27;</span>,<br>    &#125;<br>&#125;<br><br><br><span class="hljs-comment"># Password validation</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators</span><br><br>AUTH_PASSWORD_VALIDATORS = [<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;</span>,<br>    &#125;,<br>]<br><br><br><span class="hljs-comment"># Internationalization</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/5.0/topics/i18n/</span><br><br>LANGUAGE_CODE = <span class="hljs-string">&#x27;en-us&#x27;</span><br><br>TIME_ZONE = <span class="hljs-string">&#x27;UTC&#x27;</span><br><br>USE_I18N = <span class="hljs-literal">True</span><br><br>USE_TZ = <span class="hljs-literal">True</span><br><br><br><span class="hljs-comment"># Static files (CSS, JavaScript, Images)</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/5.0/howto/static-files/</span><br><br>STATIC_URL = <span class="hljs-string">&#x27;static/&#x27;</span><br><br><span class="hljs-comment"># Default primary key field type</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field</span><br><br>DEFAULT_AUTO_FIELD = <span class="hljs-string">&#x27;django.db.models.BigAutoField&#x27;</span><br><br></code></pre></td></tr></table></figure><h3 id="Django-的总路由配置"><a href="#Django-的总路由配置" class="headerlink" title="Django 的总路由配置"></a>Django 的总路由配置</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path,include<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> routers    <span class="hljs-comment">#这些都要引用</span><br><span class="hljs-keyword">from</span> lyb.views <span class="hljs-keyword">import</span> LybViewSet      <span class="hljs-comment">#这些都要引用</span><br><br>router = routers.DefaultRouter()<br>router.register(<span class="hljs-string">r&#x27;lyb&#x27;</span>,LybViewSet)    <span class="hljs-comment">#这个lyb是你的app</span><br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),   <span class="hljs-comment">#这句可以删掉</span><br>    path(<span class="hljs-string">&#x27;api/&#x27;</span>,include(router.urls))  <span class="hljs-comment">#这句是与自己的app的配置有关</span><br>]<br></code></pre></td></tr></table></figure><h3 id="Django-配置序列化"><a href="#Django-配置序列化" class="headerlink" title="Django 配置序列化"></a>Django 配置序列化</h3><p>app 名字.serializers.py 没有就创建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> serializers<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Lyb<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LybSerializer</span>(serializers.HyperlinkedModelSerializer):<br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        model = Lyb<br>        fields = <span class="hljs-string">&quot;__all__&quot;</span> <span class="hljs-comment">#所有的字段都序列化</span><br></code></pre></td></tr></table></figure><p>models.py 中的内容 ，<em>虽然不是前后端交互必要的但是因为是一个案例于是留下来</em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Lyb</span>(models.Model):<br>    title = models.CharField(max_length=<span class="hljs-number">100</span>)<br>    author = models.CharField(max_length=<span class="hljs-number">50</span>)<br>    content = models.TextField()<br>    posttime = models.DateTimeField(auto_now_add=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>下面的是 views 的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> viewsets<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Lyb <span class="hljs-comment">#导入自己的appmodel</span><br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> LybSerializer <span class="hljs-comment"># 导入序列化器</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LybViewSet</span>(viewsets.ModelViewSet):<br>    queryset = Lyb.objects.<span class="hljs-built_in">all</span>().order_by(<span class="hljs-string">&#x27;-posttime&#x27;</span>) <span class="hljs-comment">#按时间排序 当然也可以选择其他的排序</span><br>    serializer_class =  LybSerializer<br></code></pre></td></tr></table></figure><h3 id="获得-model-中的数据-特定条件"><a href="#获得-model-中的数据-特定条件" class="headerlink" title="获得 model 中的数据 特定条件"></a>获得 model 中的数据 特定条件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> myapp.models <span class="hljs-keyword">import</span> MyModel<br><br>specific_object = MyModel.objects.get(field=value)<br></code></pre></td></tr></table></figure><h3 id="获得-model-中的全部数据"><a href="#获得-model-中的全部数据" class="headerlink" title="获得 model 中的全部数据"></a>获得 model 中的全部数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> myapp.models <span class="hljs-keyword">import</span> MyModel<br><br>all_data = MyModel.objects.<span class="hljs-built_in">all</span>()<br></code></pre></td></tr></table></figure><h3 id="视图中获得对象的值"><a href="#视图中获得对象的值" class="headerlink" title="视图中获得对象的值"></a>视图中获得对象的值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> JsonResponse<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login_view</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        data = json.loads(request.body)<br>        username = data.get(<span class="hljs-string">&#x27;username&#x27;</span>)<br>        password = data.get(<span class="hljs-string">&#x27;password&#x27;</span>)<br>        <span class="hljs-comment"># 进行登录逻辑处理</span><br>        <span class="hljs-comment"># ...</span><br>        <span class="hljs-comment"># 返回响应数据</span><br>        response_data = &#123;<br>            <span class="hljs-string">&#x27;message&#x27;</span>: <span class="hljs-string">&#x27;登录成功&#x27;</span>,<br>            <span class="hljs-string">&#x27;username&#x27;</span>: username,<br>        &#125;<br>        <span class="hljs-keyword">return</span> JsonResponse(response_data)<br></code></pre></td></tr></table></figure><h3 id="常见写法"><a href="#常见写法" class="headerlink" title="常见写法"></a>常见写法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> JsonResponse<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> UserModel<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">login_view</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&quot;POST&quot;</span>:<br>        <span class="hljs-comment"># 获取请求中的用户名和密码</span><br>        username = request.POST.get(<span class="hljs-string">&quot;username&quot;</span>)<br>        password = request.POST.get(<span class="hljs-string">&quot;password&quot;</span>)<br><br>        <span class="hljs-comment"># 在这里进行用户登录验证逻辑</span><br>        <span class="hljs-keyword">try</span>:<br>            user = UserModel.objects.get(userName=username, passWord=password)<br>            <span class="hljs-comment"># 用户登录成功</span><br>            <span class="hljs-keyword">return</span> JsonResponse(&#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;登录成功&quot;</span>&#125;)<br>        <span class="hljs-keyword">except</span> UserModel.DoesNotExist:<br>            <span class="hljs-comment"># 用户名或密码不正确，登录失败</span><br>            <span class="hljs-keyword">return</span> JsonResponse(&#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;用户名或密码不正确&quot;</span>&#125;, status=<span class="hljs-number">401</span>)<br><br>    <span class="hljs-comment"># 如果不是 POST 请求，返回错误响应</span><br>    <span class="hljs-keyword">return</span> JsonResponse(&#123;<span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;无效的请求&quot;</span>&#125;, status=<span class="hljs-number">400</span>)<br></code></pre></td></tr></table></figure><h2 id="VUE"><a href="#VUE" class="headerlink" title="VUE"></a>VUE</h2><h3 id="VUE-环境配置"><a href="#VUE-环境配置" class="headerlink" title="VUE 环境配置"></a>VUE 环境配置</h3><p>下载 axios</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install axios -s<br></code></pre></td></tr></table></figure><p>使用 vite 脚手架创建项目 不适用 vue-cli</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm init vite-app &lt;project-name&gt;<br></code></pre></td></tr></table></figure><p>vue 中默认的代码很多都是没用的因此我们删除</p><p>vue 项目的 index.html 如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>vue-django<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span></span><br><span class="hljs-tag">      <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">integrity</span>=<span class="hljs-string">&quot;sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;anonymous&quot;</span></span><br><span class="hljs-tag">    /&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    hello<br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/src/main.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 注意这一行 type和src的路径都要打 --&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>把 main.js 中无用的代码删除</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><br><span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>).<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure><p>创建一个组件（组件名随意我这里的例子交 lyb）这边是前端向后端要数据的核心部分</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;row&quot;&gt;<br>    &lt;div class=&quot;col-md-8&quot;&gt;<br>      &lt;table class=&quot;table&quot;&gt;<br>        &lt;thead&gt;<br>          &lt;tr&gt;<br>            &lt;th&gt;标题&lt;/th&gt;<br>            &lt;th&gt;作者&lt;/th&gt;<br>            &lt;th&gt;内容&lt;/th&gt;<br>          &lt;/tr&gt;<br>        &lt;/thead&gt;<br>        &lt;tbody&gt;<br>          &lt;tr v-for=&quot;item in ly_list&quot; :key=&quot;item.url&quot;&gt;<br>            //循环显示元素<br>            &lt;td&gt;&#123;&#123; item.title &#125;&#125;&lt;/td&gt;<br>            &lt;td&gt;&#123;&#123; item.author &#125;&#125;&lt;/td&gt;<br>            &lt;td&gt;&#123;&#123; item.content &#125;&#125;&lt;/td&gt;<br>            &lt;td&gt;测试&lt;/td&gt;<br>            &lt;td&gt;<br>              &lt;button class=&quot;btn btn-success&quot; title=&quot;编辑&quot;&gt;<br>                &lt;i&gt;&lt;/i&gt;<br>              &lt;/button&gt;<br>              &lt;button class=&quot;btn btn-danger&quot; title=&quot;删除&quot;&gt;<br>                &lt;i&gt;&lt;/i&gt;<br>              &lt;/button&gt;<br>            &lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;/tbody&gt;<br>      &lt;/table&gt;<br>    &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br>&lt;script&gt;<br>  import axios from &#x27;axios&#x27; //导入axios库<br>  import &#123; reactive, onMounted, toRefs &#125; from &#x27;vue&#x27; //这三个都要导入<br>  export default &#123;<br>    name: &#x27;lyb&#x27;,<br>    setup() &#123;<br>      let base_url = &#x27;http://127.0.0.1:8000/api/lyb/&#x27; //这是django服务器的地址就是rest_framework提供数据的网址，<br>      const state = reactive(&#123;<br>        ly_list: [] //用来接数据<br>      &#125;)<br>      const getLyb = () =&gt; &#123;<br>        axios<br>          .get(base_url)<br>          .then((res) =&gt; &#123;<br>            //发送请求<br>            console.log(&#x27;成功&#x27;)<br>            state.ly_list = res.data<br>            console.log(res.data)<br>          &#125;)<br>          .catch((err) =&gt; &#123;<br>            console.log(err)<br>          &#125;)<br>      &#125;<br>      onMounted(() =&gt; &#123;<br>        getLyb() //需要onMounted挂载<br>      &#125;)<br><br>      return &#123;<br>        ...toRefs(state) //这段也要加上<br>      &#125;<br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>最后在 APP.vue 中注册一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;row&quot;&gt;<br>    &lt;lyb /&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>  import lyb from &#x27;./components/Lyb.vue&#x27;<br>  export default &#123;<br>    name: &#x27;App&#x27;,<br>    components: &#123;<br>      lyb<br>    &#125;<br>  &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>将 django 与 vue 的服务器都启动，正常情况下就可以看到后端传来的数据了。</p><p>这里有个小 bug 使用 vscode ssh 连接的时候网站可能不会发生改变，这并不是代码的问题。可能与电脑&#x2F;虚拟机性能有关。可以进入虚拟机桌面的终端直接运行，不通过 ssh 转发查看效果</p><h3 id="使用-element-plus"><a href="#使用-element-plus" class="headerlink" title="使用 element-plus"></a>使用 element-plus</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install element-plus --save<br></code></pre></td></tr></table></figure><p><strong>main.js 中配置**</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./index.css&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ElementPlus</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;element-plus&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;element-plus/dist/index.css&#x27;</span><br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ElementPlus</span>).<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>配置</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>TypeScript学习</title>
    <link href="/2025/04/02/TypeScript%E5%AD%A6%E4%B9%A0/"/>
    <url>/2025/04/02/TypeScript%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>Hello TypeScript</p><span id="more"></span><h1 id="TypeScript-基础"><a href="#TypeScript-基础" class="headerlink" title="TypeScript 基础"></a>TypeScript 基础</h1><h2 id="如何在终端运行-Ts"><a href="#如何在终端运行-Ts" class="headerlink" title="如何在终端运行 Ts"></a>如何在终端运行 Ts</h2><ol><li>安装 ts</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g typescript<br></code></pre></td></tr></table></figure><ol start="2"><li>将 .ts 文件编译成 .js 文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tsc test.ts // 会在当前目录下生成对应的 test.js 文件<br></code></pre></td></tr></table></figure><ol start="3"><li>运行 .js 文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">node test.js<br></code></pre></td></tr></table></figure><p>也可以使用<code>ts-node</code>直接运行<code>.ts</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g typescript ts-node<br>ts-node test.ts<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Python3</title>
    <link href="/2025/04/02/Python3/"/>
    <url>/2025/04/02/Python3/</url>
    
    <content type="html"><![CDATA[<p>人生苦短,我用 Python</p><span id="more"></span><h1 id="Python-进阶"><a href="#Python-进阶" class="headerlink" title="Python 进阶"></a>Python 进阶</h1><h2 id="多线程技术"><a href="#多线程技术" class="headerlink" title="多线程技术"></a>多线程技术</h2><h3 id="Python-对于并发编程的支持"><a href="#Python-对于并发编程的支持" class="headerlink" title="Python 对于并发编程的支持"></a>Python 对于并发编程的支持</h3><ol><li><p>多线程:<code>threading</code> 利用 CPU 和 IO 可以同时执行的原理,让 CPU 不会干等待 IO 完成</p></li><li><p>多进程:<code>multiprocessing</code>,利用多核 CPU 的能力,真正的并行执行任务</p></li><li><p>异步 ID:<code>asyncio</code>,在<strong>单线程</strong>利用 CPU 和 IO 同时执行的原理,实现函数异步执行</p></li><li><p>使用<code>Lock</code> 对资源加锁,防止冲突访问</p></li><li><p>使用<code>Queue</code>实现不同线程&#x2F;进程之间的数据通信,实现生产者消费者模式</p></li><li><p>使用线程池<code>Pool</code>&#x2F;进程池<code>Pool</code>,简化线程&#x2F;进程的任务提交,等待结束,获取结果</p></li></ol><h3 id="Python-并发编程的三种方式"><a href="#Python-并发编程的三种方式" class="headerlink" title="Python 并发编程的三种方式"></a>Python 并发编程的三种方式</h3><ol><li>多线程 <code>Thread</code></li><li>多进程 <code>Process</code></li><li>多协程 <code>Coroutine</code></li></ol><blockquote><p>一个<code>进程</code>中可以启动多个<code>线程</code>,一个<code>线程</code>中又可以启动多个<code>协程</code></p></blockquote><h4 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h4><p><strong>多进程 Process(multiprocessing)</strong><br>优点:可以利用多核 CPU 并行计算<br>缺点:占用资源最多,可启动数目比线程少<br>适用于 CPU 密集型计算</p><p><strong>多线程 Thread(threading)</strong><br>优点:更加轻量<br>缺点:相比进程,多线程只能并发执行,不能利用多 CPU(GIL),相比协程启动数目有限制,占用内存资源,有切换开销<br>适用于 IO 密集型计算</p><blockquote><p>即在 Python 中 多线程只能使用一个 CPU</p></blockquote><p><strong>多协程 Coroutine (asyncio)</strong><br>优点:内存开销最少,启动协程数量最多<br>缺点:目前库有限制,代码实现复杂<br>适用于 IO 密集型计算,需要超多任务运行,但有线程库支持的场景</p><h3 id="Python-全局解释器锁-GIL-Global-Interpreter-Lock"><a href="#Python-全局解释器锁-GIL-Global-Interpreter-Lock" class="headerlink" title="Python 全局解释器锁 GIL (Global Interpreter Lock)"></a>Python 全局解释器锁 GIL (Global Interpreter Lock)</h3><p>是 Python 用于同步线程的一种机制,使得任何时刻仅有一个线程在执行</p><p><strong>如何应对 GIL</strong></p><ol><li>多线程 <code>threading</code>请多用于<code>IO密集型计算</code>,因为在<code>I/O</code>期间,线程会释放 GIL.但是如果多线程用于<code>CPU密集型计算</code>只会更加拖累速度</li><li>使用<code>multiprocessing</code>的多进程机制实现并行计算,利用多核 CPU 优势</li></ol>]]></content>
    
    
    <categories>
      
      <category>Python3</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>only apple can do</title>
    <link href="/2025/04/02/only_apple_can_do/"/>
    <url>/2025/04/02/only_apple_can_do/</url>
    
    <content type="html"><![CDATA[<p>It’s something only apple can do~</p><span id="more"></span><h1 id="适用于苹果芯片了吗"><a href="#适用于苹果芯片了吗" class="headerlink" title="适用于苹果芯片了吗"></a>适用于苹果芯片了吗</h1><p><a href="https://isapplesiliconready.com/zh">https://isapplesiliconready.com/zh</a></p><h1 id="调整-dock-动画速度"><a href="#调整-dock-动画速度" class="headerlink" title="调整 dock 动画速度"></a>调整 dock 动画速度</h1><p>原链接</p><p><a href="https://cn.appflix.cc/how-to-remove-animation-and-delay-in-dock-on-mac/">https://cn.appflix.cc/how-to-remove-animation-and-delay-in-dock-on-mac/</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">defaults write com.apple.dock autohide-time-modifier -float 0.25;<br><br>killall Dock<br></code></pre></td></tr></table></figure><h1 id="解决其他品牌的耳机蓝牙连接后自动播放音乐"><a href="#解决其他品牌的耳机蓝牙连接后自动播放音乐" class="headerlink" title="解决其他品牌的耳机蓝牙连接后自动播放音乐"></a>解决其他品牌的耳机蓝牙连接后自动播放音乐</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist<br></code></pre></td></tr></table></figure><h1 id="karabiner-无法连接键盘"><a href="#karabiner-无法连接键盘" class="headerlink" title="karabiner 无法连接键盘"></a>karabiner 无法连接键盘</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">grabber_client connect_failed: Connection refused<br></code></pre></td></tr></table></figure><p>一般会打出这样的 log。设置中重新设置登录项和后台就好了</p><h1 id="mac-切换输入法失灵问题"><a href="#mac-切换输入法失灵问题" class="headerlink" title="mac 切换输入法失灵问题"></a>mac 切换输入法失灵问题</h1><p><strong>解决方案</strong><br><del>更换搜狗输入法</del></p><p>诚然使用<code>caps</code>键对中英文进行切换是一个好的想法,但是苹果默认的切换实际上是切换输入法,没错 <code>拼</code>是一个输入法<code>ABC</code>是另一个输入法,<br>所以默认情况下按<code>caps</code>进行切换时,实际上是切换了输入法,而不是一个在一个输入法里面进行了中英文切换,如果打字速度比较快,尤其是刚刚按下<code>caps</code>后就立即进行输入,系统反应不过来切换就容易失败.</p><p>所以解决方案是关闭设置中的使用<code>caps</code>切换<code>ABC</code>输入法,然后当你想从中文切换到英文时,在<code>拼</code>下按一下<code>cpas</code>没错这才是普通的模式切换,按<code>shift</code>依旧可以大写.</p><p>你无法通过长按<code>cpas</code>进入到大写模式了,但是你可以切换输入法<code>ABC</code>在这里面按一下<code>cpas</code>进行大小写切换,这就和普通的英文输入法无二了</p><h1 id="使用中断挂载与抹除硬盘"><a href="#使用中断挂载与抹除硬盘" class="headerlink" title="使用中断挂载与抹除硬盘"></a>使用中断挂载与抹除硬盘</h1><p><a href="https://qizhanming.com/blog/2021/12/13/how-to-use-diskutil-format-flash-disk-on-macos">https://qizhanming.com/blog/2021/12/13/how-to-use-diskutil-format-flash-disk-on-macos</a></p><h1 id="Mac-恢复键盘长按"><a href="#Mac-恢复键盘长按" class="headerlink" title="Mac 恢复键盘长按"></a>Mac 恢复键盘长按</h1><p><a href="https://zihengcat.github.io/2018/08/02/simple-ways-to-set-macos-consecutive-input/">https://zihengcat.github.io/2018/08/02/simple-ways-to-set-macos-consecutive-input/</a></p><h1 id="Linux-apt-安装"><a href="#Linux-apt-安装" class="headerlink" title="Linux apt 安装"></a>Linux apt 安装</h1><p>推荐一个好用的 apt 软件 <code>aptitude</code> 先用 apt 安装这个软件 再用它去下载包<br>可以自动解决依赖问题</p>]]></content>
    
    
    <categories>
      
      <category>苹果</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Fast踩坑记录</title>
    <link href="/2025/04/02/FastGPT%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <url>/2025/04/02/FastGPT%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>坑啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊</p><span id="more"></span><h1 id="env-local-记录"><a href="#env-local-记录" class="headerlink" title="env.local 记录"></a>env.local 记录</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs shell">LOG_DEPTH=3<br><span class="hljs-meta prompt_"># </span><span class="language-bash">默认用户密码，用户名为 root，每次重启时会自动更新。</span><br>DEFAULT_ROOT_PSW=123456<br><span class="hljs-meta prompt_"># </span><span class="language-bash">数据库最大连接数</span><br>DB_MAX_LINK=5<br><span class="hljs-meta prompt_"># </span><span class="language-bash">token</span><br>TOKEN_KEY=dfdasfdas<br><span class="hljs-meta prompt_"># </span><span class="language-bash">文件阅读时的密钥</span><br>FILE_TOKEN_KEY=filetokenkey<br><span class="hljs-meta prompt_"># </span><span class="language-bash">root key, 最高权限</span><br>ROOT_KEY=fdafasd<br><span class="hljs-meta prompt_"># </span><span class="language-bash">openai 基本地址，可用作中转。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">OPENAI_BASE_URL=https://api.openai.com/v1</span><br>OPENAI_BASE_URL=http://localhost:4000/v1<br>CHAT_API_KEY=&lt;你的令牌&gt;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">OpenAI API Key</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHAT_API_KEY=sk-xxxx</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ai proxy api</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AIPROXY_API_ENDPOINT=http://localhost:4000/v1</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AIPROXY_API_TOKEN=</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">强制将图片转成 <span class="hljs-built_in">base64</span> 传递给模型</span><br>MULTIPLE_DATA_TO_BASE64=true<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">mongo 数据库连接参数，本地开发连接远程数据库时，可能需要增加 directConnection=<span class="hljs-literal">true</span> 参数，才能连接上。</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">MONGODB_URI=mongodb://username:password@0.0.0.0:27017/fastgpt?authSource=admin</span><br>MONGODB_URI=mongodb://localhost:27017/fastgpt?directConnection=true<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">向量库优先级: pg &gt; milvus</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">PG 向量库连接参数</span><br>PG_URL=postgresql://qwerty:123456@localhost:5432/postgres<br><span class="hljs-meta prompt_"># </span><span class="language-bash">milvus 向量库连接参数</span><br>MILVUS_ADDRESS=<br>MILVUS_TOKEN=<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">code sandbox url</span><br>SANDBOX_URL=http://localhost:3001<br><span class="hljs-meta prompt_"># </span><span class="language-bash">商业版地址</span><br>PRO_URL=<br><span class="hljs-meta prompt_"># </span><span class="language-bash">页面的地址，用于自动补全相对路径资源的 domain，注意后面不要跟 /</span><br>FE_DOMAIN=http://localhost:3000<br><span class="hljs-meta prompt_"># </span><span class="language-bash">文件域名，也是指向 FastGPT 服务，但是如果希望内容足够安全，可以独立分配一个域名，避免高危文件读取到主域名的内容。</span><br>FILE_DOMAIN=http://localhost:3000<br><span class="hljs-meta prompt_"># </span><span class="language-bash">二级路由，需要打包时候就确定</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">NEXT_PUBLIC_BASE_URL=/fastai</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">日志等级: debug, info, warn, error</span><br>LOG_LEVEL=debug<br>STORE_LOG_LEVEL=warn<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安全配置</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动 IP 限流(<span class="hljs-literal">true</span>)，部分接口增加了 ip 限流策略，防止非正常请求操作。</span><br>USE_IP_LIMIT=false<br><span class="hljs-meta prompt_"># </span><span class="language-bash">工作流最大运行次数，避免极端的死循环情况</span><br>WORKFLOW_MAX_RUN_TIMES=500<br><span class="hljs-meta prompt_"># </span><span class="language-bash">循环最大运行次数，避免极端的死循环情况</span><br>WORKFLOW_MAX_LOOP_TIMES=50<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">对话日志推送服务</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-comment"># 日志服务地址</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHAT_LOG_URL=http://localhost:8080</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-comment"># 日志推送间隔</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHAT_LOG_INTERVAL=10000</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-comment"># 日志来源ID前缀</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHAT_LOG_SOURCE_ID_PREFIX=fastgpt-</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">自定义跨域，不配置时，默认都允许跨域（逗号分割）</span><br>ALLOWED_ORIGINS=<br>DEBUG_MODEL_REQUEST=true<br></code></pre></td></tr></table></figure><h1 id="配置mongodb-community-7-0"><a href="#配置mongodb-community-7-0" class="headerlink" title="配置mongodb-community@7.0"></a>配置<a href="mailto:&#109;&#111;&#x6e;&#x67;&#x6f;&#x64;&#98;&#x2d;&#99;&#111;&#109;&#x6d;&#x75;&#x6e;&#105;&#x74;&#x79;&#x40;&#x37;&#x2e;&#x30;">mongodb-community@7.0</a></h1><h2 id="正常安装"><a href="#正常安装" class="headerlink" title="正常安装"></a>正常安装</h2><ol><li><p>使用 Homebrew 安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew tap mongodb/brew<br>brew install mongodb-community@7.0<br></code></pre></td></tr></table></figure></li><li><p>启动<strong>MongoDB</strong>服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew services start mongodb/brew/mongodb-community@7.0<br></code></pre></td></tr></table></figure></li><li><p>(可选)检查服务状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew services list<br></code></pre></td></tr></table></figure></li></ol><h2 id="错误记录"><a href="#错误记录" class="headerlink" title="错误记录"></a>错误记录</h2><h3 id="mongodb-状态为-error"><a href="#mongodb-状态为-error" class="headerlink" title="mongodb 状态为 error"></a>mongodb 状态为 error</h3><ol><li><p>日志中提到.plist 文件中存在问题,手动查看内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat ~/Library/LaunchAgents/homebrew.mxcl.mongodb-community@7.0.plist<br></code></pre></td></tr></table></figure></li><li><p>手动启动 mongodb</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/opt/homebrew/bin/mongod --dbpath /opt/homebrew/var/mongodb --logpath ~/mongod.log<br></code></pre></td></tr></table></figure></li><li><p>最终解决方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo rm /tmp/mongodb-27017.sock<br></code></pre></td></tr></table></figure><blockquote><p>出现这个问题是上次的 mongodb 可能未正常退出,导致有一个配置在这里,新创建的话没有权限,加 sudo 也不会解决问题的.删除对应的文件即可</p></blockquote></li></ol><h2 id="安装-Mongosh"><a href="#安装-Mongosh" class="headerlink" title="安装 Mongosh"></a>安装 Mongosh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install mongosh<br></code></pre></td></tr></table></figure><h2 id="启动事务功能"><a href="#启动事务功能" class="headerlink" title="启动事务功能"></a>启动事务功能</h2><p>FastGPT 启动时会执行 MongoDB 的事务操作（如 insertOne），<strong>这些操作只在副本集或 mongos 模式下支持</strong>，否则会报错：</p><blockquote><p>Transaction numbers are only allowed on a replica set member or mongos</p></blockquote><ol><li><p>修改本地的配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim /opt/homebrew/etc/mongod.conf<br></code></pre></td></tr></table></figure></li><li><p>添加以下内容</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">replication:<br>  replSetName: rs0<br></code></pre></td></tr></table></figure><ol start="3"><li><p>最终配置文件如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemLog:<br>  destination: file<br>  path: /opt/homebrew/var/log/mongodb/mongo.log<br>  logAppend: true<br>storage:<br>  dbPath: /opt/homebrew/var/mongodb<br>net:<br>  bindIp: 127.0.0.1, ::1<br>  ipv6: true<br>replication:<br>  replSetName: rs0<br></code></pre></td></tr></table></figure></li></ol><h2 id="修改-env-local"><a href="#修改-env-local" class="headerlink" title="修改 env.local"></a>修改 env.local</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">MONGODB_URI=mongodb://localhost:27017/fastgpt?directConnection=true<br></code></pre></td></tr></table></figure><blockquote><p>默认不需要密码</p></blockquote><h1 id="配置-postgresql-14"><a href="#配置-postgresql-14" class="headerlink" title="配置 postgresql@14"></a>配置 postgresql@14</h1><h2 id="正常安装-postgresql"><a href="#正常安装-postgresql" class="headerlink" title="正常安装 postgresql"></a>正常安装 postgresql</h2><ol><li><p>brew 安装数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew install postgresql@14<br></code></pre></td></tr></table></figure></li><li><p>启动数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew services start postgresql@14<br></code></pre></td></tr></table></figure></li></ol><h2 id="可能需要做的"><a href="#可能需要做的" class="headerlink" title="可能需要做的"></a>可能需要做的</h2><ol><li><p>初始化数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">initdb --locale=C -E UTF-8 /opt/homebrew/var/postgresql@14<br></code></pre></td></tr></table></figure></li></ol><h2 id="安装-PGvector"><a href="#安装-PGvector" class="headerlink" title="安装 PGvector"></a>安装 PGvector</h2><ol><li><p>进入数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">psql -U $(whoami) -d postgres<br></code></pre></td></tr></table></figure></li><li><p>输入命令,装插件是全局装的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> EXTENSION IF <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">EXISTS</span> vector;<br></code></pre></td></tr></table></figure></li><li><p>查看效果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">\dx<br></code></pre></td></tr></table></figure><blockquote><pre><code class="hljs">    List of installed extensions</code></pre><p>Name | Version | Schema | Description<br>———+———+————+————————————–<br>plpgsql | 1.0 | pg_catalog | PL&#x2F;pgSQL procedural language<br>vector | 0.8.0 | public | vector data type and ivfflat and hnsw</p></blockquote></li></ol><h2 id="修改-env-local-配置文件"><a href="#修改-env-local-配置文件" class="headerlink" title="修改 env.local 配置文件"></a>修改 env.local 配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">PG_URL=postgresql://qwerty:123456@localhost:5432/postgres<br></code></pre></td></tr></table></figure><blockquote><p>其中<code>qwerty</code>是你的用户名<code>123456</code>是你设置的密码<code>postgres</code>是你创建的数据库</p></blockquote><h1 id="配置-OneAPI"><a href="#配置-OneAPI" class="headerlink" title="配置 OneAPI"></a>配置 OneAPI</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/songquanpeng/one-api.git<br></code></pre></td></tr></table></figure><h2 id="构建前端"><a href="#构建前端" class="headerlink" title="构建前端"></a>构建前端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd one-api/web/default<br>npm install<br>npm run build<br></code></pre></td></tr></table></figure><h2 id="构建后端"><a href="#构建后端" class="headerlink" title="构建后端"></a>构建后端</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ../..<br>go mod download<br>go build -ldflags &quot;-s -w&quot; -o one-api<br></code></pre></td></tr></table></figure><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod u+x one-api<br>./one-api --port 3000 --log-dir ./logs<br></code></pre></td></tr></table></figure><blockquote><p>我们的端口要 3001 或者其他的 3000 被 FastGPT 占用了,因此这里的 3000 可以改为 4000<br>你也可以在终端输入下面的命令检查是否可用</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>curl http://localhost:4000/v1/chat/completions \                                 ░▒▓ 127 х │ base Py │ 15:33:06<br>  -H &quot;Authorization: Bearer 你的令牌&quot; \<br>  -H &quot;Content-Type: application/json&quot; \<br>  -d &#x27;&#123;<br>    &quot;model&quot;: &quot;deepseek-chat&quot;,<br>    &quot;messages&quot;: [&#123;&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;你好&quot;&#125;]<br>  &#125;&#x27;<br></code></pre></td></tr></table></figure><blockquote><p>但是 FastGPT 的<strong>聊天</strong>根本不走这里,只是用 OneAPI 的部分功能,这块配不配置都没问题,关键是<strong>渠道</strong>和<strong>令牌</strong>。即 OneAPI 的聊天根本不需要配置</p></blockquote><h2 id="修改-env-local-1"><a href="#修改-env-local-1" class="headerlink" title="修改 env.local"></a>修改 env.local</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">OPENAI_BASE_URL=http://localhost:4000/v1<br>CHAT_API_KEY=你的令牌<br><span class="hljs-meta prompt_"># </span><span class="language-bash">OpenAI API Key</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">CHAT_API_KEY=sk-xxxx</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">ai proxy api</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AIPROXY_API_ENDPOINT=http://localhost:4000/v1</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">AIPROXY_API_TOKEN=</span><br></code></pre></td></tr></table></figure><blockquote><p>注意,注释掉 AIPROXY_API</p><p>CHAT_API_KEY 就是你搞来的令牌</p></blockquote><h2 id="FastGPT-的一些设置"><a href="#FastGPT-的一些设置" class="headerlink" title="FastGPT 的一些设置"></a>FastGPT 的一些设置</h2><blockquote><p>如果你注释了 <em>AIPROXY_API_ENDPOINT</em> 那么这里的渠道和日志你一点就错但是不必理会</p><p>此外,向量化的时候终端会报错,说连接拒绝什么的.但是不要紧它那个走的<em>AIPROXY_API_ENDPOINT</em> ,随后会走 OneAPI,你依旧可以完成运行,向量化速度很慢,所以不要放大段文字.</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>配置记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>摘抄</title>
    <link href="/2025/04/02/%E6%91%98%E6%8A%84/"/>
    <url>/2025/04/02/%E6%91%98%E6%8A%84/</url>
    
    <content type="html"><![CDATA[<p>一些摘抄</p><span id="more"></span><h1 id="Space-X"><a href="#Space-X" class="headerlink" title="Space X"></a>Space X</h1><p>要么死的安然，要么活得绚烂</p><h1 id="无限剑制"><a href="#无限剑制" class="headerlink" title="无限剑制"></a>无限剑制</h1><p>I am the bone of my sword.<br>吾为所持剑之骨<br>Steel is my body, and fire is my blood.<br>钢铁为身，而火焰为血<br>I have created over a thousand blades.<br>手制之剑己达千余<br>Unknown to Death.Nor known to Life.<br>不为死所知.亦不为生所知<br>Have withstood pain to create many weapons.<br>曾承受痛苦创造诸多武器<br>Yet, those hands will never hold anything.<br>然而，留下的只有虚无<br>So as I pray,<br>故如我祈求<br>unlimited blade works.<br>无限剑制</p><h1 id="迅哥儿语录"><a href="#迅哥儿语录" class="headerlink" title="迅哥儿语录"></a>迅哥儿语录</h1><p>卑怯的人，即使有万丈的怒火，除弱草以外，又能烧掉什么呢？</p><h1 id="艾尔登法环"><a href="#艾尔登法环" class="headerlink" title="艾尔登法环"></a>艾尔登法环</h1><h2 id="梅琳娜"><a href="#梅琳娜" class="headerlink" title="梅琳娜"></a>梅琳娜</h2><p>O Erdtree,you shall burn.Burn for the sake of new Lord.</p><p>黄金树,燃烧吧,为了新王燃烧吧.</p><h2 id="解指女巫"><a href="#解指女巫" class="headerlink" title="解指女巫"></a>解指女巫</h2><p>You will be Elden lord yet!</p><p>一定要成为艾尔登之王啊.</p><h1 id="曹操"><a href="#曹操" class="headerlink" title="曹操"></a>曹操</h1><p>满朝公卿，夜哭到明，明哭到夜，岂能哭死董卓</p><h1 id="托克维尔-《论美国的民主》"><a href="#托克维尔-《论美国的民主》" class="headerlink" title="托克维尔 《论美国的民主》"></a>托克维尔 《论美国的民主》</h1><p>为了达到自己的目的,美国人以个人利益为动力,任统个人去发挥自己的力量和智慧,而不予以限制。而为此目的,俄国人差不多把社会的一切权力都集中于一人之手。前者以自由为主要的行动手段,后者以奴役为主要的行动手段。他们的起点不同,道路各异。然而, 其中的每一民族都好像受到天意的密令指派,终有一天要各主宰世界一半的命运。</p><h1 id="西西弗斯"><a href="#西西弗斯" class="headerlink" title="西西弗斯"></a>西西弗斯</h1><p>西西弗沉默的喜悦全在于此,他的命运是属于他的。岩石是他的东西。同样，荒诞人在静观自身的烦忧时，把所有偶像的嘴全堵上了。宇宙突然恢复寂静，无数轻微的惊叹声从大地升起。无意识的、隐秘的呼唤，各色人物的催促，都是不可缺少的反面和胜利的代价。没有不带阴影的阳光，必须认识黑夜。荒诞人说“对”,于是孜孜以求，努力不懈。</p><p>如果说有什么个人命运，那也不存在什么高高在上的命运，或至少存在一种荒诞人断定的命运，那就是命中注定的命运，令人轻蔑的命运。至于其他，他知道他是自己岁月的主人。在反躬审视自己生命的时刻，西西弗再次来到岩石跟前，静观一系列没有联系的行动，这些行动变成了他的命运。由他自己创造的，在他记忆的注视下善始善终，并很快以他的死来盖棺定论。就这样，他确信一切人事皆有人的根源，就像渴望光明并知道黑夜无尽头的盲人永远在前进。岩石照旧滚动。</p><p>我让西西弗留在山下，让世人永远看得见他的负荷！然而西西弗却以否认诸神和推举岩石这一至高无上的忠诚来诲人警世。他也判定一切皆善。他觉得这个从此没有救世主的世界既非不毛之地，抑非渺不足道。那岩石的每个细粒，那黑暗笼罩的大山每道矿物的光芒，都成了他一人世界的组成部分。攀登山顶的拼搏本身足以充实一颗人心。应当想象西西弗斯是幸福的。</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>茶水之间</title>
    <link href="/2025/04/02/%E8%8C%B6%E6%B0%B4%E4%B9%8B%E9%97%B4/"/>
    <url>/2025/04/02/%E8%8C%B6%E6%B0%B4%E4%B9%8B%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<p>记录一下上班日常</p><span id="more"></span><h1 id="2025-3-8"><a href="#2025-3-8" class="headerlink" title="2025&#x2F;3&#x2F;8"></a>2025&#x2F;3&#x2F;8</h1><p>今天是三八妇女节,又是一个周末.这份工作倒也谈不上太辛苦。如果我 996 工作制的话，倒是每月能有个 1.5w 的收入。</p><p>还是想考研的,想去科大读书以后读个博士什么的，不过今年心态倒是有很大的进步了,我不再把失利当做失败而是当做一次微小的成功。</p><p>或许某年后我就考上了呢?当前的想法是打工一年赚大约 18W,这样大概就可以保证我未来 5 年的生存了。</p><h1 id="2025-3-10"><a href="#2025-3-10" class="headerlink" title="2025&#x2F;3&#x2F;10"></a>2025&#x2F;3&#x2F;10</h1><p>上周写代码快写猝死了，周六 8:00-10:30 周日 8:00-11.30。</p><p>有点担心哪天自己猝死了，白天还在想着要不要买个人寿保险受益人填我奶奶。</p><p>我不想加班啊啊啊啊，但是现在一来需要机会磨炼代码水平，二来需要机会去赚点钱实现梦想。</p><p>要么去当一个 Python 程序员？C++几乎没有工作啊。</p><h1 id="2025-4-2"><a href="#2025-4-2" class="headerlink" title="2025&#x2F;4&#x2F;2"></a>2025&#x2F;4&#x2F;2</h1><p>这段时间工作强度下来了，每天晚上 8:40 就闪人，感觉良好。</p><p>最近一直在看 <code>RAG</code>技术。现在 AI 是真火啊</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/04/02/hello-world/"/>
    <url>/2025/04/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MATLAB教程</title>
    <link href="/2021/09/03/matlab/"/>
    <url>/2021/09/03/matlab/</url>
    
    <content type="html"><![CDATA[<h1 id="MATLAB-的安装"><a href="#MATLAB-的安装" class="headerlink" title="MATLAB 的安装"></a>MATLAB 的安装</h1><p>MATLAB 是一个收费软件并且价格对学生党来说过于昂贵。这里使用的是一个破解版的。</p><span id="more"></span><h1 id="勇敢的第一步"><a href="#勇敢的第一步" class="headerlink" title="勇敢的第一步"></a>勇敢的第一步</h1><h2 id="使用-MATLAB-进行第一个运算"><a href="#使用-MATLAB-进行第一个运算" class="headerlink" title="使用 MATLAB 进行第一个运算"></a>使用 MATLAB 进行第一个运算</h2><p>创建变量</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span> = <span class="hljs-number">1</span><span class="hljs-comment">;</span><br><span class="hljs-attr">b</span> = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><span class="hljs-comment">;4,5,6;7,8,9];</span><br></code></pre></td></tr></table></figure><p>当不指定输出变量时，MATLAB 使用变量 ans （answer 的缩写）存储计算结果。</p><p>如果以英文分号（;）结束语句，MATLAB 会执行计算，但会在命令窗口中隐藏对应的输出值。</p><p>创建矩阵的另一种方法是使用函数，如产生一组 1、0 或随机数。例如，创建一个由 0 组成的 5×1 列向量</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">z</span> = zeros(<span class="hljs-number">5</span>,<span class="hljs-number">1</span>)<br><br><span class="hljs-attribute">z</span> = <span class="hljs-number">5</span>×<span class="hljs-number">1</span><br><span class="hljs-attribute">0</span><br><span class="hljs-attribute">0</span><br><span class="hljs-attribute">0</span><br><span class="hljs-attribute">0</span><br><span class="hljs-attribute">0</span><br></code></pre></td></tr></table></figure><h2 id="矩阵运算"><a href="#矩阵运算" class="headerlink" title="矩阵运算"></a>矩阵运算</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span> = <span class="hljs-selector-attr">[1 2 3; 4 5 6; 7 8 10]</span><br><span class="hljs-selector-tag">a</span> + <span class="hljs-number">10</span><br><span class="hljs-function"><span class="hljs-title">sin</span><span class="hljs-params">(a)</span></span><br></code></pre></td></tr></table></figure><p>上面这段代码运行的结果是</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">ans =<br><br>   0.841470984807897   0.909297426825682   0.141120008059867<br>  <span class="hljs-string">-0</span>.756802495307928  <span class="hljs-string">-0</span>.958924274663138  <span class="hljs-string">-0</span>.279415498198926<br>   0.656986598718789   0.989358246623382  <span class="hljs-string">-0</span>.544021110889370<br></code></pre></td></tr></table></figure><p>注意在 MATLAB 中如果式子的值没有返回给一个变量，那么他会保存在一个叫 ans 的自带的变量中</p><h3 id="转置矩阵"><a href="#转置矩阵" class="headerlink" title="转置矩阵"></a>转置矩阵</h3><p><strong>如果要使用转置矩阵请在变量的右上角加一个’</strong><br>例如<code>a&#39;</code></p><p><strong>转置矩阵的定义:</strong><br><em>将矩阵的行列互换得到的新矩阵称为转置矩阵，转置矩阵的行列式不变</em></p><h3 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><p>使用*号来完成两个矩阵之间的乘法运算。没错就是我们在《线性代数》中学到的那样</p><p><strong>inv(a)会返回一个矩阵的逆矩阵</strong></p><p><strong>逆矩阵：</strong><br><em>设 A 是一个 n 阶矩阵，若存在另一个 n 阶矩阵 B，使得： AB&#x3D;BA&#x3D;E ，则称方阵 A 可逆，并称方阵 B 是 A 的逆矩阵。</em></p><p><strong>矩阵乘法:</strong><br><em>矩阵相乘最重要的方法是一般矩阵乘积。它只有在第一个矩阵的列数（column）和第二个矩阵的行数（row）相同时才有意义 。一般单指矩阵乘积时，指的便是一般矩阵乘积。一个 m×n 的矩阵就是 m×n 个数排成 m 行 n 列的一个数阵</em></p><p>我感觉我已经不认识“矩”这个字了&#x3D; &#x3D;</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">a</span> <span class="hljs-operator">=</span> [<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-comment">; 4 5 6; 7 8 10]</span><br><span class="hljs-attribute">p</span> <span class="hljs-operator">=</span> a*inv(a)<br></code></pre></td></tr></table></figure><h3 id="设置数值格式"><a href="#设置数值格式" class="headerlink" title="设置数值格式"></a>设置数值格式</h3><p>在上面这个代码中，你的答案可能是下面两种之一</p><p>长这样</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">p</span> =<br><br>    <span class="hljs-attribute">1</span>.<span class="hljs-number">0000</span>   -<span class="hljs-number">0</span>.<span class="hljs-number">0000</span>   -<span class="hljs-number">0</span>.<span class="hljs-number">0000</span><br>    <span class="hljs-attribute">0</span>.<span class="hljs-number">0000</span>    <span class="hljs-number">1</span>.<span class="hljs-number">0000</span>   -<span class="hljs-number">0</span>.<span class="hljs-number">0000</span><br>    <span class="hljs-attribute">0</span>.<span class="hljs-number">0000</span>   -<span class="hljs-number">0</span>.<span class="hljs-number">0000</span>    <span class="hljs-number">1</span>.<span class="hljs-number">0000</span><br></code></pre></td></tr></table></figure><p>或者是长这样</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">p</span> =<br><br>   <span class="hljs-attribute">1</span>.<span class="hljs-number">000000000000000</span>  -<span class="hljs-number">0</span>.<span class="hljs-number">000000000000000</span>  -<span class="hljs-number">0</span>.<span class="hljs-number">000000000000000</span><br>   <span class="hljs-attribute">0</span>.<span class="hljs-number">000000000000001</span>   <span class="hljs-number">0</span>.<span class="hljs-number">999999999999999</span>  -<span class="hljs-number">0</span>.<span class="hljs-number">000000000000000</span><br>   <span class="hljs-attribute">0</span>.<span class="hljs-number">000000000000002</span>  -<span class="hljs-number">0</span>.<span class="hljs-number">000000000000003</span>   <span class="hljs-number">1</span>.<span class="hljs-number">000000000000000</span><br></code></pre></td></tr></table></figure><p>其中出现第二种情况的原因是，之前有设置过数值格式<br>使用<br>在代码的第一行加上</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">format</span> <span class="hljs-keyword">short</span><br></code></pre></td></tr></table></figure><p>答案就会变成第一种的样子了。<br>我们并不需要每次都进行设置，一旦设置过后。它将会被保存下来，直到我们再次更改设置。</p><p><strong>数据格式只影响数字的显示，而不影响 MATLAB 对结果的运算或保存。</strong></p><h3 id="矩阵乘法-1"><a href="#矩阵乘法-1" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">a</span> <span class="hljs-operator">=</span> [<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-comment">; 4 5 6; 7 8 10];</span><br><span class="hljs-attribute">p</span> <span class="hljs-operator">=</span> a*a<br></code></pre></td></tr></table></figure><p>结果</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">p</span> =<br><br>    <span class="hljs-attribute">30</span>    <span class="hljs-number">36</span>    <span class="hljs-number">45</span><br>    <span class="hljs-attribute">66</span>    <span class="hljs-number">81</span>   <span class="hljs-number">102</span><br>   <span class="hljs-attribute">109</span>   <span class="hljs-number">134</span>   <span class="hljs-number">169</span><br></code></pre></td></tr></table></figure><p>矩阵数乘</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">a</span> <span class="hljs-operator">=</span> [<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-comment">; 4 5 6; 7 8 10];</span><br><span class="hljs-attribute">p</span> <span class="hljs-operator">=</span> a.*a<br></code></pre></td></tr></table></figure><p>结果</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">p</span> =<br><br>     <span class="hljs-attribute">1</span>     <span class="hljs-number">4</span>     <span class="hljs-number">9</span><br>    <span class="hljs-attribute">16</span>    <span class="hljs-number">25</span>    <span class="hljs-number">36</span><br>    <span class="hljs-attribute">49</span>    <span class="hljs-number">64</span>   <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h2 id="数组-矩阵的拼合"><a href="#数组-矩阵的拼合" class="headerlink" title="数组&#x2F;矩阵的拼合"></a>数组&#x2F;矩阵的拼合</h2><h3 id="两种不同的拼接方式"><a href="#两种不同的拼接方式" class="headerlink" title="两种不同的拼接方式"></a>两种不同的拼接方式</h3><p>在线性代数中我们已经知道了<strong>分块矩阵</strong>的概念。类似的在 MATLAB 中我们也可以把数组进行拼接</p><p><strong>分块矩阵</strong><br><em>分块矩阵是一个矩阵， 它是把矩阵分别按照横竖分割成一些小的子矩阵 。 然后把每个小矩阵看成一个元素。</em></p><p>MATLAB 中有两种不同的数组拼接方式<br>第一种水平拼接，就是左右拼在一起啦(｡・&#96;ω´･)</p><p>仔细想想这个我们创建矩阵的时候使用<code>,</code>是不是一个道理呀<br>把俩个小矩阵看成两个元素就可以</p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs tap">a = [1<span class="hljs-number"> 2 </span>3;<span class="hljs-number"> 4 </span>5 6;<span class="hljs-number"> 7 </span>8 10];<br>p = [a,a]<br></code></pre></td></tr></table></figure><p>结果</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><br><span class="hljs-attribute">p</span> =<br><br>     <span class="hljs-attribute">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-attribute">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span>     <span class="hljs-number">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>     <span class="hljs-attribute">7</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span>     <span class="hljs-number">7</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span><br><br></code></pre></td></tr></table></figure><p>第二种则是竖直拼接，也就是上下拼在一起啦</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">a</span> <span class="hljs-operator">=</span> [<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><span class="hljs-comment">; 4 5 6; 7 8 10];</span><br><span class="hljs-attribute">p</span> <span class="hljs-operator">=</span> [a<span class="hljs-comment">;a]</span><br></code></pre></td></tr></table></figure><p>结果是</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">p</span> =<br><br>     <span class="hljs-attribute">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-attribute">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>     <span class="hljs-attribute">7</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span><br>     <span class="hljs-attribute">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>     <span class="hljs-attribute">4</span>     <span class="hljs-number">5</span>     <span class="hljs-number">6</span><br>     <span class="hljs-attribute">7</span>     <span class="hljs-number">8</span>    <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h2 id="复数的表示"><a href="#复数的表示" class="headerlink" title="复数的表示"></a>复数的表示</h2><p>我相信各位大佬复数的定义都没有忘记</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">sqrt</span><span class="hljs-params">(-<span class="hljs-number">1</span>)</span></span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ans</span> =<br><br>   <span class="hljs-attribute">0</span>.<span class="hljs-number">0000</span> + <span class="hljs-number">1</span>.<span class="hljs-number">0000</span>i<br></code></pre></td></tr></table></figure><p>如果想要表示数的虚部可以使用 <code>i</code> 或<code>j</code>。<br>像这样</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">c</span> = [<span class="hljs-number">3</span>+<span class="hljs-number">4</span>i, <span class="hljs-number">4</span>+<span class="hljs-number">3</span>j<span class="hljs-comment">; -i, 10j]</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">c</span> =<br><br>   <span class="hljs-attribute">3</span>.<span class="hljs-number">0000</span> + <span class="hljs-number">4</span>.<span class="hljs-number">0000</span>i   <span class="hljs-number">4</span>.<span class="hljs-number">0000</span> + <span class="hljs-number">3</span>.<span class="hljs-number">0000</span>i<br>   <span class="hljs-attribute">0</span>.<span class="hljs-number">0000</span> - <span class="hljs-number">1</span>.<span class="hljs-number">0000</span>i   <span class="hljs-number">0</span>.<span class="hljs-number">0000</span> +<span class="hljs-number">10</span>.<span class="hljs-number">0000</span>i<br></code></pre></td></tr></table></figure><p>使用 i 或者使用 j，不会有任何不同。完全看个人喜好</p><h2 id="从数组中进行搜索"><a href="#从数组中进行搜索" class="headerlink" title="从数组中进行搜索"></a>从数组中进行搜索</h2><p>在过去所学的计算机语言中我们已经接触过了二维数组，它们往往有很方便的得到某一行某一列所有元素的方法比如</p><p>C++</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> numbers[<span class="hljs-number">3</span>][<span class="hljs-number">3</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)<br>       cout &lt;&lt; numbers[<span class="hljs-number">2</span>][i] &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">ls = [[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>],[<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]]<br><span class="hljs-built_in">print</span>(ls[<span class="hljs-number">2</span>])<br></code></pre></td></tr></table></figure><p>Java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> rainbow.demo;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    <span class="hljs-type">int</span>[][] array = &#123; &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> &#125;, &#123; <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span> &#125;, &#123; <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span> &#125; &#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j : array[<span class="hljs-number">2</span>]) &#123;<br>      System.out.println(j);<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Scala</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs scala"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dim2B</span></span>(rows : <span class="hljs-type">Int</span>)=&#123;<br>      <span class="hljs-keyword">val</span> d2  = <span class="hljs-keyword">new</span> <span class="hljs-type">Array</span>[<span class="hljs-type">ArrayBuffer</span>[<span class="hljs-type">Int</span>]](rows)<br>      <span class="hljs-keyword">for</span> (k &lt;<span class="hljs-number">-0</span> until rows ) &#123;<br>        d2(k) = <span class="hljs-keyword">new</span> <span class="hljs-type">ArrayBuffer</span>[<span class="hljs-type">Int</span>]()<br>      &#125;<br>      d2<br>&#125;<br><span class="hljs-keyword">val</span> index = dim2B(<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><p>C#</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs Csharp"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Work</span><br>&#123;<br><br>   <span class="hljs-keyword">class</span> <span class="hljs-title">MyMain</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>()</span><br>        &#123;<br>            <span class="hljs-built_in">int</span>[,] arrray1 = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">3</span>,<span class="hljs-number">3</span>] &#123; &#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;, &#123;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>&#125;,&#123; <span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>&#125; &#125;;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">3</span>; i++)<br>            &#123;<br>                Console.WriteLine(arrray1[<span class="hljs-number">2</span>,i]);<br>            &#125;<br>            Console.ReadLine();<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="查找某一个元素"><a href="#查找某一个元素" class="headerlink" title="查找某一个元素"></a>查找某一个元素</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">A = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>];<br>A(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB"><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">4</span><br></code></pre></td></tr></table></figure><h3 id="查找列或者行"><a href="#查找列或者行" class="headerlink" title="查找列或者行"></a>查找列或者行</h3><p><strong>遍历一整行</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">A = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]<br>A(<span class="hljs-number">1</span>,:)<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">ans</span> <span class="hljs-operator">=</span><br><br>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p><strong>遍历一整列</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">A = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>;<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>;<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]<br>A(:,<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB"><span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">2</span><br>     <span class="hljs-number">5</span><br>     <span class="hljs-number">8</span><br></code></pre></td></tr></table></figure><h2 id="工作空间变量"><a href="#工作空间变量" class="headerlink" title="工作空间变量"></a>工作空间变量</h2><p>使用<code>whos</code>查看工作区的内容，也就是查看变量</p><h1 id="输出-Hello-World"><a href="#输出-Hello-World" class="headerlink" title="输出 Hello World"></a>输出 Hello World</h1><h2 id="字符串数组中的文本"><a href="#字符串数组中的文本" class="headerlink" title="字符串数组中的文本"></a>字符串数组中的文本</h2><p>MATLAB 也支持对文本的操作。通过这样的方式创建一个字符串，或者说将文本分配给变量。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">line = <span class="hljs-string">&quot;hello world&quot;</span><br></code></pre></td></tr></table></figure><p>如果文本包含双引号，请在变量的定义中使用两个双引号。类似于 C 语言中使用%%输出百分号。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">q = <span class="hljs-string">&quot;My ablity is &quot;&quot;Dirty Deeds Done Dirt Cheap&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>显示效果</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">q</span> <span class="hljs-operator">=</span><br><br>    <span class="hljs-string">&quot;My ablity is &quot;</span>Dirty Deeds Done Dirt Cheap<span class="hljs-string">&quot;&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="字符串拼接"><a href="#字符串拼接" class="headerlink" title="字符串拼接"></a>字符串拼接</h2><p>使用加号进行字符串拼接，就像你在 JAVA 和 Python 中做到的那样</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs makefile">str1 = <span class="hljs-string">&quot;I &quot;</span><br>str1 + <span class="hljs-string">&quot;LOVE YOU&quot;</span><br></code></pre></td></tr></table></figure><h2 id="strlength"><a href="#strlength" class="headerlink" title="strlength"></a>strlength</h2><p>还记的 C 语言中我们怎样求一个字符串的长度的嘛？！<br>使用 string.h 头文件中的 strlen 函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-type">char</span> str1[<span class="hljs-number">100</span>] =<span class="hljs-string">&quot;hello world&quot;</span>;<br>    <span class="hljs-type">int</span> length = <span class="hljs-built_in">strlen</span>(str1);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,length)l;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>不过在 MATLAB 中我们也有类似的函数 叫 strlength<br>使用方法和 C 语言的 strlen 十分类似<br>这里直接举 MATLAB 官方手册的例子</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">A = [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;bb&quot;</span>,<span class="hljs-string">&quot;ccc&quot;</span>; <span class="hljs-string">&quot;dddd&quot;</span>,<span class="hljs-string">&quot;eeeeee&quot;</span>,<span class="hljs-string">&quot;fffffff&quot;</span>]<br><br>A =<br><span class="hljs-number">2</span>×<span class="hljs-number">3</span> string array<br><span class="hljs-string">&quot;a&quot;</span>     <span class="hljs-string">&quot;bb&quot;</span>      <span class="hljs-string">&quot;ccc&quot;</span><br><span class="hljs-string">&quot;dddd&quot;</span>  <span class="hljs-string">&quot;eeeeee&quot;</span>  <span class="hljs-string">&quot;fffffff&quot;</span><br>strlength(A)<br><br><span class="hljs-built_in">ans</span> =<br><span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-number">4</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="MATLAB-中的函数"><a href="#MATLAB-中的函数" class="headerlink" title="MATLAB 中的函数"></a>MATLAB 中的函数</h1><p>函数是一个我们非常熟悉的概念，甚至后面还出现了函数式编程的语言 <strong>scala</strong><br>MATLAB 中的函数有两种 第一种是内置的，第二种是用户自定义的。<br>囿于篇幅，我们不讨论 MATLAB 自带的函数，想要了解的话可以去官网查看原文文档。<br>MATLAB 有中文文档。<br>我们需要进行讨论和学习的是第二种情况</p><h2 id="如何创建和使用自己定义函数"><a href="#如何创建和使用自己定义函数" class="headerlink" title="如何创建和使用自己定义函数"></a>如何创建和使用自己定义函数</h2><p>在别的高级编程语言中，我们要定义一个函数只需要使用如下的语句例如这些<br>(随便写的没有分行)</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Myfunction</span>()</span>&#123;<br>    ·······<br>&#125;<br><br><span class="hljs-function">def <span class="hljs-title">my_select_paper_window</span>(<span class="hljs-params">self, paper</span>):</span><br><span class="hljs-function">    pass</span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Say</span>()</span><br>&#123;<br>    ······<br>&#125;<br></code></pre></td></tr></table></figure><p>但是在 MATLAB 中情况有了些许不同<br>我们先创建一个文件叫 myfunction.m 名字可以自己取<br>创建函数类似这样的写法</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">y</span> = <span class="hljs-title">j</span><span class="hljs-params">(x)</span></span><br>    y = x*x+<span class="hljs-number">5</span>;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>调用函数必须保证两个文件在同一个目录下</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">t</span> <span class="hljs-operator">=</span> myfunction(<span class="hljs-number">3</span>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><h1 id="二维图像和三维图像绘制"><a href="#二维图像和三维图像绘制" class="headerlink" title="二维图像和三维图像绘制"></a>二维图像和三维图像绘制</h1><h2 id="二维图像"><a href="#二维图像" class="headerlink" title="二维图像"></a>二维图像</h2><p>使用<code>plot</code> 函数来创建一个二维曲线图。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-number">0</span>:<span class="hljs-built_in">pi</span>/<span class="hljs-number">100</span>:<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;<br>y = <span class="hljs-built_in">sin</span>(x);<br>xlabel(<span class="hljs-string">&#x27;x&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;sin(x)&#x27;</span>)<br>title(<span class="hljs-string">&#x27;Plot of the Sine Function&#x27;</span>)<br><span class="hljs-built_in">plot</span>(x,y,<span class="hljs-string">&#x27;g:*&#x27;</span>)<br></code></pre></td></tr></table></figure><p>x 的三个元素分别是 开始的坐标，拐点数量，结束的坐标,plot 中第三个元素表示使用绿线进行标识</p><h2 id="多个函数图像在一个图中"><a href="#多个函数图像在一个图中" class="headerlink" title="多个函数图像在一个图中"></a>多个函数图像在一个图中</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-number">0</span>:<span class="hljs-built_in">pi</span>/<span class="hljs-number">100</span>:<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;<br>y = <span class="hljs-built_in">sin</span>(x);<br><span class="hljs-built_in">plot</span>(x,y)<br><span class="hljs-built_in">hold</span> on<br>y2 = <span class="hljs-built_in">cos</span>(x);<br><span class="hljs-built_in">plot</span>(x,y2,<span class="hljs-string">&#x27;:&#x27;</span>)<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;sin&#x27;</span>,<span class="hljs-string">&#x27;cos&#x27;</span>)<br><span class="hljs-built_in">hold</span> off<br></code></pre></td></tr></table></figure><p>使用 hold on ，握住这个图像，然后往里面添加新的图像。hold off 松手之后图像一齐绘制出来</p><h2 id="三维图像"><a href="#三维图像" class="headerlink" title="三维图像"></a>三维图像</h2><p>早在《高等数学》中我们就已经接触过多元函数的概念了。<br>比较常见的是由 x,y,z 组成的一个三维空间内的曲面<br>使用 MATLAB 可以很方便的帮我们绘制图像<br>接下来是一段代码</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">[X,Y] = <span class="hljs-built_in">meshgrid</span>(<span class="hljs-number">-2</span>:<span class="hljs-number">.2</span>:<span class="hljs-number">2</span>);<br>Z = X .* <span class="hljs-built_in">exp</span>(-X.^<span class="hljs-number">2</span> - Y.^<span class="hljs-number">2</span>);<br>surf(X,Y,Z)<br></code></pre></td></tr></table></figure><h3 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h3><p><strong>meshgrid</strong><br>[X,Y] &#x3D; meshgrid(x,y)<br>[X,Y] &#x3D; meshgrid(x)<br>[X,Y,Z] &#x3D; meshgrid(x,y,z)<br>[X,Y,Z] &#x3D; meshgrid(x)<br><strong>Description</strong><br><em>example</em><br>[X,Y] &#x3D; meshgrid(x,y) returns 2-D grid coordinates based on the coordinates contained in vectors x and y. X is a matrix where each row is a copy of x, and Y is a matrix where each column is a copy of y. The grid represented by the coordinates X and Y has length(y) rows and length(x) columns.</p><p><em>example</em><br>[X,Y] &#x3D; meshgrid(x) is the same as [X,Y] &#x3D; meshgrid(x,x), returning square grid coordinates with grid size length(x)-by-length(x).</p><p><em>example</em><br>[X,Y,Z] &#x3D; meshgrid(x,y,z) returns 3-D grid coordinates defined by the vectors x, y, and z. The grid represented by X, Y, and Z has size length(y)-by-length(x)-by-length(z).</p><p><em>example</em><br>[X,Y,Z] &#x3D; meshgrid(x) is the same as [X,Y,Z] &#x3D; meshgrid(x,x,x), returning 3-D grid coordinates with grid size length(x)-by-length(x)-by-length(x).</p><p><strong><em>上面的内容是 MATLAB 官方手册中对这个函数的解释</em></strong><br>说人话就是<strong>用两个坐标轴上的点在平面上画格。</strong><br>不理解不要紧我们来看一下这个例子</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">x=[<span class="hljs-number">-3</span>:<span class="hljs-number">1</span>:<span class="hljs-number">3</span>];<br>y=[<span class="hljs-number">-2</span>:<span class="hljs-number">1</span>:<span class="hljs-number">2</span>];<br>[X,Y]= <span class="hljs-built_in">meshgrid</span>(x,y)<br></code></pre></td></tr></table></figure><p>运行结果是</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">X =<br><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">0</span>     <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br><br><br>Y =<br><br>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span><br>    <span class="hljs-number">-1</span>    <span class="hljs-number">-1</span>    <span class="hljs-number">-1</span>    <span class="hljs-number">-1</span>    <span class="hljs-number">-1</span>    <span class="hljs-number">-1</span>    <span class="hljs-number">-1</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span><br>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>仔细看 X 和 Y 。X 是 -3 到 +3，Y 是 -2 到 +2。<br>是不是有点明白了<br>再看一段代码</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">x=[<span class="hljs-number">-3</span>:<span class="hljs-number">2</span>:<span class="hljs-number">3</span>];<br>y=[<span class="hljs-number">-2</span>:<span class="hljs-number">2</span>:<span class="hljs-number">2</span>];<br>[X,Y]= <span class="hljs-built_in">meshgrid</span>(x,y)<br></code></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB"><br>X =<br><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span><br>    <span class="hljs-number">-3</span>    <span class="hljs-number">-1</span>     <span class="hljs-number">1</span>     <span class="hljs-number">3</span><br>Y =<br><br>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span>    <span class="hljs-number">-2</span><br>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span>     <span class="hljs-number">0</span><br>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span>     <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>原来中间的数字是 step 啊<br>所以我们可以说函数的形参规则是[start:step:end]<br>第一个参数是开始，第二个参数是每次改变的坐标，第三个参数则是在哪截止</p><p><strong>三维空间的情况</strong><br>类似的上面这个例子也可以用在三维空间中</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">x = [<span class="hljs-number">-3</span>:<span class="hljs-number">1</span>:<span class="hljs-number">3</span>];<br>y = [<span class="hljs-number">-2</span>:<span class="hljs-number">1</span>:<span class="hljs-number">2</span>];<br>z = [<span class="hljs-number">-4</span>:<span class="hljs-number">1</span>:<span class="hljs-number">4</span>]<br>[X,Y,Z] = <span class="hljs-built_in">meshgrid</span>(x,y,z)<br></code></pre></td></tr></table></figure><p>效果也是和上面的类似，不过是三维的由于答案比较长，就不放在这里了。</p><p>最后最后上面这么多说人话就是用 MATLAB 的方式建立去建立一个坐标。<br>虽然并不是我们所熟悉的笛卡尔坐标系就是了。<br><strong>surf 函数</strong><br>surf 函数和与之一起使用的 mesh 函数用于在三维空间显示曲面。<br>surf 函数用于彩色显示出连接线和表面。</p><p><strong>mesh 函数</strong><br>mesh 函数用于产生表面的线框，并且只标记的点之间的连线线框着色。</p><h2 id="子图"><a href="#子图" class="headerlink" title="子图"></a>子图</h2><p>使用 subplot 函数在同一个窗口的不同子区域中显示多个绘图。</p><p><strong>语法</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">subplot(m,n,p)  <span class="hljs-comment">%先只看第一个就好了</span><br>subplot(m,n,p,<span class="hljs-string">&#x27;replace&#x27;</span>)<br>subplot(m,n,p,<span class="hljs-string">&#x27;align&#x27;</span>)<br>subplot(m,n,p,ax)<br>subplot(<span class="hljs-string">&#x27;Position&#x27;</span>,pos)<br>subplot(**_,Name,Value)<br>ax = subplot(_**)<br>subplot(ax)<br></code></pre></td></tr></table></figure><p><em>subplot(m,n,p) 将当前图窗划分为 m×n 网格，并在 p 指定的位置创建坐标区。MATLAB® 按行号对子图位置进行编号。第一个子图是第一行的第一列，第二个子图是第一行的第二列，依此类推。如果指定的位置已存在坐标区，则此命令会将该坐标区设为当前坐标区。</em></p><p>示例</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs MATLAB">t = <span class="hljs-number">0</span>:<span class="hljs-built_in">pi</span>/<span class="hljs-number">10</span>:<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;<br>[X,Y,Z] = cylinder(<span class="hljs-number">4</span>*<span class="hljs-built_in">cos</span>(t));<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>); mesh(X); title(<span class="hljs-string">&#x27;X&#x27;</span>);<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>); mesh(Y); title(<span class="hljs-string">&#x27;Y&#x27;</span>);<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>); mesh(Z); title(<span class="hljs-string">&#x27;Z&#x27;</span>);<br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>); mesh(X,Y,Z); title(<span class="hljs-string">&#x27;X,Y,Z&#x27;</span>);<br></code></pre></td></tr></table></figure><h1 id="程序脚本"><a href="#程序脚本" class="headerlink" title="程序脚本"></a>程序脚本</h1><h2 id="怎样创建一个脚本？"><a href="#怎样创建一个脚本？" class="headerlink" title="怎样创建一个脚本？"></a>怎样创建一个脚本？</h2><p>在主流 linux 系统中我们往往使用如下命令创建一个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">touch hello.cpp<br></code></pre></td></tr></table></figure><p>类似的在 MATLAB 的终端中使用</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">edit</span> your_file_name.m<br></code></pre></td></tr></table></figure><p>这样就创建了一个名字是 your*file_name.m 的 m 文件<br>当然了，你可以起别的名字。<br>***人不能 至少不应该_** 我还是觉的敲代码的程序员更帅气一点。<br>如果你非要用鼠标去右键创建文件。那也是可以的</p><h2 id="开始编写我们的脚本"><a href="#开始编写我们的脚本" class="headerlink" title="开始编写我们的脚本"></a>开始编写我们的脚本</h2><h3 id="怎样输出变量"><a href="#怎样输出变量" class="headerlink" title="怎样输出变量"></a>怎样输出变量</h3><p>相信你肯定学过这样那样的输出手段比如</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">std</span>::cout &lt;&lt; <span class="hljs-string">&quot;我是C++的输出&quot;</span>;<br>System.out.println(<span class="hljs-string">&quot;我叫java&quot;</span>);<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;俺是python&quot;</span>)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;我是C语言\n&quot;</span>);<br></code></pre></td></tr></table></figure><p>在 MATLAB 中使用<code>disp()</code>来输出一个变量</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">t = <span class="hljs-string">&quot;灰烬大人,愿您能找到安歇的港湾&quot;</span>;<br><span class="hljs-built_in">disp</span>(t)<br></code></pre></td></tr></table></figure><p>终端输出效果是</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-meta prompt_">&gt;&gt;</span> hello<br>灰烬大人，愿您能找到安歇的港湾<br></code></pre></td></tr></table></figure><p>至于为什么前面有个 hello 那是因为我这个文件名就叫 hello。你起一个<strong>Dark Souls</strong>也可以</p><p>有些同学总想搞个大新闻······（子弹滞销帮帮我们）</p><p>说不对啊，我一开始没有使用<code>disp()</code>它也有输出啊。<br>那是因为 MATLAB 有多种输出变量的方式，主要包括以下几类：</p><p><strong>第一种:</strong><br>语句后面不加分号“；”，这是直接输出数值的比较简单的方法。</p><p><strong>第二种</strong><br>disp(a)直接在命令窗口显示 a 变量，这种方法输出和第一种差不多。</p><p><strong>第三种</strong><br>fprintf(‘a&#x3D;%f’,a)格式控制输出：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>];<br><span class="hljs-built_in">fprintf</span>(<span class="hljs-string">&quot;a = %d\n&quot;</span>,a);<br></code></pre></td></tr></table></figure><h2 id="分支、跳转与循环"><a href="#分支、跳转与循环" class="headerlink" title="分支、跳转与循环"></a>分支、跳转与循环</h2><p>我想没人看的出来这个标题名是在 neta 《病毒、枪炮与细菌》这本书吧。</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>必须要提的概念是代码块，这是几乎所有的编程语言中都有的概念。<br>先来看这段代码。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A = [<span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span>;<span class="hljs-number">6</span> <span class="hljs-number">5</span> <span class="hljs-number">4</span>;<span class="hljs-number">9</span> <span class="hljs-number">7</span> <span class="hljs-number">9</span>];<br>B = <span class="hljs-built_in">max</span>(A,[],<span class="hljs-number">2</span>);<br>B2 = B(:)&#x27;<br>C = <span class="hljs-built_in">min</span>(A,[],<span class="hljs-number">1</span>);<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = B2<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = C<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">i</span>==<span class="hljs-built_in">j</span>)<br>            <span class="hljs-built_in">i</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p>注意到，每个 if 或者 for 的后面都有一个 end。<br>没错 end 正是用来区分代码块的标志。整体的代码风格我感觉和 python 很接近。<br>让我们直接在实例中学习吧：</p><p><em>求 1 到 100 内所有的偶数和</em></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">s = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">2</span>:<span class="hljs-number">2</span>:<span class="hljs-number">100</span><br>    s = s + <span class="hljs-built_in">i</span>;<br><span class="hljs-keyword">end</span><br>s<br></code></pre></td></tr></table></figure><p><em>打印 2 到 100 所有的素数</em></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">2</span> : <span class="hljs-number">100</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">2</span> : <span class="hljs-number">100</span><br>        <span class="hljs-keyword">if</span> (~<span class="hljs-built_in">mod</span>(<span class="hljs-built_in">i</span>,<span class="hljs-built_in">j</span>))<br>           <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">j</span> &gt; (<span class="hljs-built_in">i</span>/<span class="hljs-built_in">j</span>))<br>        fprintf(<span class="hljs-string">&#x27;%d is prime \n&#x27;</span>, <span class="hljs-built_in">i</span>);<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><p><em>求水仙花数</em></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">m=<span class="hljs-number">100</span>:<span class="hljs-number">999</span>;<br>m1=<span class="hljs-built_in">rem</span>(m,<span class="hljs-number">10</span>);<span class="hljs-comment">%求个位数</span><br>m2=<span class="hljs-built_in">rem</span>(<span class="hljs-built_in">fix</span>(m/<span class="hljs-number">10</span>),<span class="hljs-number">10</span>); <span class="hljs-comment">%求十位数</span><br>m3=<span class="hljs-built_in">fix</span>(m/<span class="hljs-number">100</span>); <span class="hljs-comment">%求百位数</span><br>k=<span class="hljs-built_in">find</span>(m==m1.^<span class="hljs-number">3</span>+m2.^<span class="hljs-number">3</span>+m3.^<span class="hljs-number">3</span>); <span class="hljs-comment">%find(一维向量) 得出一维向量的下标序号</span><br>s=m(k);<br>s<br></code></pre></td></tr></table></figure><p><strong>说明</strong></p><table><thead><tr><th>语句</th><th>作用</th></tr></thead><tbody><tr><td>max(A,[],2)</td><td>求矩阵中每一行的最大值</td></tr><tr><td>min(A,[],2)</td><td>求矩阵中每一行的最小值</td></tr><tr><td>max(A,[],1)</td><td>求矩阵中每一列的最大值</td></tr><tr><td>min(A,[],1)</td><td>求矩阵中每一列的最小值</td></tr></tbody></table><h2 id="输入语句"><a href="#输入语句" class="headerlink" title="输入语句"></a>输入语句</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab">n =<span class="hljs-number">10</span>;<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">true</span>;<br>    n=input(<span class="hljs-string">&#x27;请输入n=&#x27;</span>);<br>    <span class="hljs-keyword">if</span> n==<span class="hljs-number">10</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">end</span>;<br>    <span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;输入错误&quot;</span>);<br><span class="hljs-keyword">end</span>;<br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&quot;恭喜输入正确&quot;</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程技术</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
